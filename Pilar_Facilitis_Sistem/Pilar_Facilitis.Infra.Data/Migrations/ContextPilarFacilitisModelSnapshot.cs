// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pilar_Facilitis.Infra.Data.Contexts.Base;

namespace Pilar_Facilitis.Infra.Data.Migrations
{
    [DbContext(typeof(ContextPilarFacilitis))]
    partial class ContextPilarFacilitisModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Chamado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClienteId");

                    b.Property<DateTime>("DataSolicitacao");

                    b.Property<string>("DescricaoAtendimento");

                    b.Property<string>("DescricaoProblema");

                    b.Property<Guid?>("PontoAtendimentoId");

                    b.Property<int>("Prioridade");

                    b.Property<Guid?>("ServicoId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PontoAtendimentoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Chamado");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Cidade", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("EstadoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Endereco", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Complemento");

                    b.Property<int>("Estado");

                    b.Property<int>("IdCidade");

                    b.Property<Guid?>("IdCliente");

                    b.Property<Guid?>("IdFuncionario");

                    b.Property<Guid?>("IdPontoAtendimento");

                    b.Property<int>("Numero");

                    b.Property<int>("Pais");

                    b.Property<string>("RuaAv");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente")
                        .IsUnique()
                        .HasFilter("[IdCliente] IS NOT NULL");

                    b.HasIndex("IdFuncionario")
                        .IsUnique()
                        .HasFilter("[IdFuncionario] IS NOT NULL");

                    b.HasIndex("IdPontoAtendimento")
                        .IsUnique()
                        .HasFilter("[IdPontoAtendimento] IS NOT NULL");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Equipamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Capacidade");

                    b.Property<string>("Desc_Equip")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NumDeSerie");

                    b.HasKey("Id");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Sigla");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Funcionario", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Escolaridade")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("Qtd_Dependentes");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Telefone_Cel")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Telefone_Fixo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.PontoAtendimentos", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClienteId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NomeResponsavel")
                        .IsRequired();

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("PontosAtendimento");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Area");

                    b.Property<string>("Desc_Servicos")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Usuarios", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Chamado", b =>
                {
                    b.HasOne("Pilar_Facilitis.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Chamados")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Pilar_Facilitis.Domain.Entities.PontoAtendimentos", "PontoAtendimento")
                        .WithMany("Chamados")
                        .HasForeignKey("PontoAtendimentoId");

                    b.HasOne("Pilar_Facilitis.Domain.Entities.Servico", "Servico")
                        .WithMany("Chamados")
                        .HasForeignKey("ServicoId");
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Cidade", b =>
                {
                    b.HasOne("Pilar_Facilitis.Domain.Entities.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("Pilar_Facilitis.Domain.Entities.Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("Pilar_Facilitis.Domain.Entities.Endereco", "IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pilar_Facilitis.Domain.Entities.Funcionario")
                        .WithOne("Endereco")
                        .HasForeignKey("Pilar_Facilitis.Domain.Entities.Endereco", "IdFuncionario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pilar_Facilitis.Domain.Entities.PontoAtendimentos")
                        .WithOne("Endereco")
                        .HasForeignKey("Pilar_Facilitis.Domain.Entities.Endereco", "IdPontoAtendimento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pilar_Facilitis.Domain.Entities.PontoAtendimentos", b =>
                {
                    b.HasOne("Pilar_Facilitis.Domain.Entities.Cliente", "Cliente")
                        .WithMany("PontosAtendimento")
                        .HasForeignKey("ClienteId");
                });
#pragma warning restore 612, 618
        }
    }
}
